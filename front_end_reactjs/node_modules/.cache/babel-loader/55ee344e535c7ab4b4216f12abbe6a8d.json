{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\monic\\\\Documents\\\\SF Crime Dashboard\\\\SF-CRIME-DASHBOARD\\\\front_end_reactjs\\\\src\\\\components\\\\pages\\\\CrimeCategorization.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport '../../App.css';\nimport './Pages.css';\nimport one from './1.png';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Chip from '@material-ui/core/Chip';\nimport Divider from '@material-ui/core/Divider';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { emphasize, makeStyles, withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n/* import CrimeComparison from '../CrimeComparison';\r\nimport AverageCrimeTrend from '../AverageCrimeTrend'; */\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 900\n  },\n  media: {\n    maxWidth: 792,\n    height: 593\n  },\n  container: {\n    maxHeight: 440\n  },\n  tablestyle: {\n    width: '100%'\n  },\n  tablecontainer: {\n    maxHeight: 440\n  },\n  card: {\n    paddingTop: 20,\n    paddingBottom: 20,\n    paddingLeft: 35,\n    fontSize: 40\n  },\n  text: {\n    paddingTop: 10,\n    paddingBottom: 40,\n    paddingLeft: 35\n  }\n}));\nconst StyledBreadcrumb = withStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.grey[100],\n    height: theme.spacing(3),\n    color: theme.palette.grey[800],\n    fontWeight: theme.typography.fontWeightRegular,\n    '&:hover, &:focus': {\n      backgroundColor: theme.palette.grey[300]\n    },\n    '&:active': {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12)\n    }\n  }\n}))(Chip);\nconst columns = [{\n  id: 'type',\n  label: 'Type of Crime',\n  minWidth: 170\n}, {\n  id: 'description',\n  label: 'Description',\n  minWidth: 100\n}];\n\nfunction createData(type, description) {\n  return {\n    type,\n    description\n  };\n}\n\nconst rows = [createData('Burglary', 'Burglary, also called breaking and entering and sometimes housebreaking, is illegally entering a building or other areas to commit a crime. Usually that offence is theft, but most jurisdictions include others within the ambit of burglary.')];\n\nfunction handleClick(event) {\n  event.preventDefault();\n}\n\nexport default function CrimeCategorization() {\n  _s();\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: \"PageContainer\",\n    container: true,\n    spacing: 0,\n    direction: \"column\",\n    alignItems: \"center\",\n    justify: \"center\",\n    style: {\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        \"aria-label\": \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(StyledBreadcrumb, {\n          component: \"a\",\n          href: \"/\",\n          label: \"Home\",\n          icon: /*#__PURE__*/_jsxDEV(HomeIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 23\n          }, this),\n          onClick: handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StyledBreadcrumb, {\n          component: \"a\",\n          href: \"CrimeCategorization\",\n          label: \"Crime Categorization\",\n          onClick: handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: classes.card,\n          children: \"Crime Categorization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          paragraph: true,\n          variant: \"body2\",\n          color: \"textSecondary\",\n          className: classes.text,\n          children: \"As seen above, this page displays the types of crimes shown as a trend over time. The graph can be altered depending on the information a user wants to learn from it by adjusting the controls built into the graph panel above.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.tablestyle,\n          children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n            className: classes.tablecontainer,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              stickyHeader: true,\n              \"aria-label\": \"sticky table\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: column.align,\n                    style: {\n                      minWidth: column.minWidth\n                    },\n                    children: column.label\n                  }, column.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                  return /*#__PURE__*/_jsxDEV(TableRow, {\n                    hover: true,\n                    role: \"checkbox\",\n                    tabIndex: -1,\n                    children: columns.map(column => {\n                      const value = row[column.id];\n                      return /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: column.align,\n                        children: column.format && typeof value === 'number' ? column.format(value) : value\n                      }, column.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 155,\n                        columnNumber: 37\n                      }, this);\n                    })\n                  }, row.code, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 33\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n            rowsPerPageOptions: [10, 25, 100],\n            component: \"div\",\n            count: rows.length,\n            rowsPerPage: rowsPerPage,\n            page: page,\n            onChangePage: handleChangePage,\n            onChangeRowsPerPage: handleChangeRowsPerPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CrimeCategorization, \"1LSjuq2DZUwZxE9BYIdgLLfYYP4=\", false, function () {\n  return [useStyles];\n});\n\n_c = CrimeCategorization;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrimeCategorization\");","map":{"version":3,"sources":["C:/Users/monic/Documents/SF Crime Dashboard/SF-CRIME-DASHBOARD/front_end_reactjs/src/components/pages/CrimeCategorization.js"],"names":["React","one","Breadcrumbs","Chip","Divider","HomeIcon","emphasize","makeStyles","withStyles","Grid","Typography","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","useStyles","theme","root","maxWidth","media","height","container","maxHeight","tablestyle","width","tablecontainer","card","paddingTop","paddingBottom","paddingLeft","fontSize","text","StyledBreadcrumb","backgroundColor","palette","grey","spacing","color","fontWeight","typography","fontWeightRegular","boxShadow","shadows","columns","id","label","minWidth","createData","type","description","rows","handleClick","event","preventDefault","CrimeCategorization","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","newPage","handleChangeRowsPerPage","target","value","minHeight","map","column","align","slice","row","format","code","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../../App.css';\r\nimport './Pages.css';\r\nimport one from './1.png';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { emphasize, makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n/* import CrimeComparison from '../CrimeComparison';\r\nimport AverageCrimeTrend from '../AverageCrimeTrend'; */\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: 900,\r\n    },\r\n    media: {\r\n        maxWidth: 792,\r\n        height: 593,\r\n    },\r\n      container: {\r\n        maxHeight: 440,\r\n      },\r\n      tablestyle: {\r\n        width: '100%',\r\n      },\r\n      tablecontainer: {\r\n        maxHeight: 440,\r\n      },\r\n      card: {\r\n          paddingTop: 20,\r\n          paddingBottom: 20,\r\n          paddingLeft: 35,\r\n          fontSize: 40,\r\n      },\r\n      text: {\r\n          paddingTop: 10,\r\n          paddingBottom: 40,\r\n          paddingLeft: 35,\r\n      },\r\n  }));\r\n\r\n  const StyledBreadcrumb = withStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: theme.palette.grey[100],\r\n      height: theme.spacing(3),\r\n      color: theme.palette.grey[800],\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: theme.palette.grey[300],\r\n      },\r\n      '&:active': {\r\n        boxShadow: theme.shadows[1],\r\n        backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n      },\r\n    },\r\n  }))(Chip);\r\n\r\nconst columns = [\r\n    { id: 'type', label: 'Type of Crime', minWidth: 170 },\r\n    { id: 'description', label: 'Description', minWidth: 100 },\r\n  ];\r\n\r\n  function createData(type, description) {\r\n    return { type, description };\r\n  }\r\n  \r\n  const rows = [\r\n    createData('Burglary','Burglary, also called breaking and entering and sometimes housebreaking, is illegally entering a building or other areas to commit a crime. Usually that offence is theft, but most jurisdictions include others within the ambit of burglary.'),\r\n  ];\r\n\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n  }\r\n\r\nexport default function CrimeCategorization() {\r\n\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n    \r\n    return (\r\n        <Grid\r\n            className = \"PageContainer\"\r\n            container\r\n            spacing={0}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n            style={{ minHeight: '100vh' }}\r\n        >\r\n            <Grid>\r\n            <Breadcrumbs aria-label=\"breadcrumb\" >\r\n            <StyledBreadcrumb\r\n                component=\"a\"\r\n                href=\"/\"\r\n                label=\"Home\"\r\n                icon={<HomeIcon fontSize=\"small\" />}\r\n                onClick={handleClick}\r\n            />\r\n            <StyledBreadcrumb component=\"a\" href=\"CrimeCategorization\" label=\"Crime Categorization\" onClick={handleClick} />\r\n            </Breadcrumbs>\r\n            </Grid>\r\n            <Grid>\r\n            <Paper variant=\"outlined\" className = {classes.root}>\r\n                <h1 className={classes.card}>Crime Categorization</h1>\r\n                <Divider/>\r\n            <Typography paragraph variant=\"body2\" color=\"textSecondary\" className = {classes.text}>\r\n                As seen above, this page displays the types of crimes shown as a trend over time. \r\n                The graph can be altered depending on the information a user wants to learn from it by adjusting the controls built into the graph panel above.\r\n            </Typography>\r\n            <Paper className={classes.tablestyle}>\r\n            <TableContainer className={classes.tablecontainer}>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                <TableRow>\r\n                    {columns.map((column) => (\r\n                        <TableCell\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth }}\r\n                        >\r\n                        {column.label}\r\n                        </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n                        <TableBody>\r\n                            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                            return (\r\n                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                {columns.map((column) => {\r\n                                    const value = row[column.id];\r\n                                    return (\r\n                                    <TableCell key={column.id} align={column.align}>\r\n                                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                    </TableCell>\r\n                                    );\r\n                                })}\r\n                                </TableRow>\r\n                            );\r\n                            })}\r\n                        </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[10, 25, 100]}\r\n                        component=\"div\"\r\n                        count={rows.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    />\r\n                </Paper>\r\n            </Paper>\r\n        </Grid>\r\n    </Grid>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}